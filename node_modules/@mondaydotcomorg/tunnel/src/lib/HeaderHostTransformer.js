"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HeaderHostTransformer = void 0;
const node_stream_1 = require("node:stream");
class HeaderHostTransformer extends node_stream_1.Transform {
    constructor(opts = {}) {
        super(opts);
        this.replaced = false;
        this.host = opts.host || 'localhost';
    }
    _transform(data, _encoding, callback) {
        callback(null, this.replaced // after replacing the first instance of the Host header we just become a regular passthrough
            ? data
            : String(data).replace(/(\r\n[Hh]ost: )\S+/, (match, $1) => {
                this.replaced = true;
                return $1 + this.host;
            }));
    }
}
exports.HeaderHostTransformer = HeaderHostTransformer;
//# sourceMappingURL=HeaderHostTransformer.js.map